name: Build

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/**'
      - 'Dockerfile'
      - '.dockerignore'
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/**'
      - 'Dockerfile'
      - '.dockerignore'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Run tests
        run: go test -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Run go fmt check
        run: |
          unformatted_files=$(gofmt -s -l .)
          if [ -n "$unformatted_files" ]; then
            echo "::warning::Code formatting issues detected. Please run 'go fmt ./...' to fix the following files:"
            echo "$unformatted_files" | while read -r file; do
              echo "::warning file=$file::File is not properly formatted"
            done
            echo "Note: This is a warning and does not fail the build."
          else
            echo "All code is properly formatted"
          fi

  build:
    name: Build Binary
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            name: claude-code-lb-linux-amd64
            platform: linux
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            name: claude-code-lb-linux-arm64
            platform: linux
          - os: macos-latest
            goos: darwin
            goarch: amd64
            name: claude-code-lb-darwin-amd64
            platform: darwin
          - os: macos-latest
            goos: darwin
            goarch: arm64
            name: claude-code-lb-darwin-arm64
            platform: darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Get version
        id: version
        run: echo "version=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build \
            -ldflags "-X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            -o ${{ matrix.name }} \
            .

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
          retention-days: 30
          compression-level: 9