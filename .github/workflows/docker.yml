name: Docker Build and Push

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'dev'
      platforms:
        description: 'Target platforms'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: choice
        options:
          - linux/amd64,linux/arm64
          - linux/amd64
          - linux/arm64

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tags
        id: tags
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # 手动触发：使用时间戳标签
            if [ "${{ inputs.tag }}" = "dev" ]; then
              TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${TIMESTAMP}"
            else
              TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}"
            fi
          elif [ "${{ github.event_name }}" = "release" ]; then
            # 发布触发：使用发布标签
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}"
          else
            # 默认标签
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "Generated tags: ${TAGS}"

      - name: Get build info  
        id: build-info
        run: |
          echo "version=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
          echo "commit=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            VERSION=${{ steps.build-info.outputs.version }}
            COMMIT=${{ steps.build-info.outputs.commit }}
            DATE=${{ steps.build-info.outputs.date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image info
        run: |
          echo "Image pushed: ${{ steps.tags.outputs.tags }}"
          echo "Platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}"
          echo "Version: ${{ steps.build-info.outputs.version }}"